[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "py-healthcheck"
version = "0.1.0"
description = "A comprehensive health check library for Python applications and microservices"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "py-healthcheck contributors", email = "info@py-healthcheck.dev"}
]
maintainers = [
    {name = "py-healthcheck contributors", email = "info@py-healthcheck.dev"}
]
keywords = ["health", "healthcheck", "monitoring", "microservices", "flask", "fastapi", "django"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Database",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "httpx>=0.24.0",
]

[project.optional-dependencies]
# Database drivers
postgres = [
    "psycopg2-binary>=2.9.0",
    "asyncpg>=0.28.0",
]
mysql = [
    "pymysql>=1.0.0",
    "aiomysql>=0.2.0",
]
redis = [
    "redis>=4.5.0",
    "aioredis>=2.0.0",
]
mongodb = [
    "pymongo>=4.0.0",
    "motor>=3.0.0",
]
elasticsearch = [
    "elasticsearch>=8.0.0",
]
http = [
    "requests>=2.28.0",
]

# Framework integrations
flask = [
    "flask>=2.0.0",
]
fastapi = [
    "fastapi>=0.100.0",
]
django = [
    "django>=3.2.0",
]

# CLI enhancements
cli = [
    "rich>=13.0.0",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# All optional dependencies
all = [
    "py-healthcheck[postgres,mysql,redis,mongodb,elasticsearch,http,flask,fastapi,django,cli,dev]"
]

[project.urls]
Homepage = "https://github.com/py-healthcheck/py-healthcheck"
Documentation = "https://py-healthcheck.readthedocs.io"
Repository = "https://github.com/py-healthcheck/py-healthcheck.git"
"Bug Tracker" = "https://github.com/py-healthcheck/py-healthcheck/issues"
Changelog = "https://github.com/py-healthcheck/py-healthcheck/blob/main/CHANGELOG.md"

[project.scripts]
py-healthcheck = "py_healthcheck.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["py_healthcheck*"]

[tool.setuptools.package-data]
py_healthcheck = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["py_healthcheck"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["py_healthcheck"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "psycopg2.*",
    "pymysql.*",
    "redis.*",
    "pymongo.*",
    "elasticsearch.*",
    "requests.*",
    "httpx.*",
    "click.*",
    "flask.*",
    "fastapi.*",
    "django.*",
    "motor.*",
    "aioredis.*",
    "aiomysql.*",
    "asyncpg.*",
]
ignore_missing_imports = true
